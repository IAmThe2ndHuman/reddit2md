package cmd

import (
	"fmt"
	"os"
	"os/exec"

	"go.uber.org/zap"
)

// BundleMarkdownToEPUB uses pandoc to bundle markdown files in mdDir into an EPUB file at path.
// It creates a temporary title.txt file in mdDir to hold the metadata for the EPUB.
func BundleMarkdownToEPUB(title string, author string, mdPaths []string, epubPath string) error {
	titlePath := fmt.Sprintf("%s/title.txt", os.TempDir())

	f, err := os.Create(titlePath)

	if err != nil {
		return err
	}

	defer func(f *os.File) {
		err := f.Close()
		if err != nil {
			panic(err)
		}
	}(f)

	_, err = f.WriteString(fmt.Sprintf(`---
title: 
- type: main
  text: "%s"
- type: subtitle
  text: An investigation of metadata
author: "%s"
description: "Generated by reddit2md via pandoc. Content downloaded from Reddit."
...
`, title, author))

	if err != nil {
		return err
	}

	cmd := exec.Command("pandoc", append(mdPaths, "-o", epubPath, "--metadata-file="+titlePath, "-s", "--toc")...)

	zap.S().Info(cmd.String())

	return cmd.Run()
}
